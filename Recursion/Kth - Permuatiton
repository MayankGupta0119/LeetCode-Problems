The set [1, 2, 3, ..., n] contains a total of n! unique permutations.

By listing and labeling all of the permutations in order, we get the following sequence for n = 3:

"123"
"132"
"213"
"231"
"312"
"321"
Given n and k, return the kth permutation sequence.

Code

#include <iostream>
#include <vector>
#include <string>
using namespace std;
string getkthpermut(int n, int k)
{
    int fact = 1;
    k = k-1;
    vector<int> numbers;
    string ans = "";
    for (int i = 1; i < n; i++)
    {
        fact = fact * i;
        numbers.push_back(i);
    }
    numbers.push_back(n);
    while (true)
    {
        ans += to_string(numbers[k / fact]);
        numbers.erase(numbers.begin() + (k / fact));
        if (numbers.size() == 0)
        {
            break;
        }
        k = k % fact;
        fact = fact / numbers.size();
    }
    return ans;
}
int main()
{
    int n, k;
    cout << "enter range: ";
    cin >> n;
    cout << "enter k: ";
    cin >> k;
    string ans = getkthpermut(n, k);
    cout << ans << endl;
}
