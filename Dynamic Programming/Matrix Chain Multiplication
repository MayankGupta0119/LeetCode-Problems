#include <iostream>
#include <vector>
using namespace std;
int calcmincost(int i, int j, vector<vector<int>> &dp, vector<int> &arr)
{
    if (i == j)
    {
        return 0;
    }
    if (dp[i][j] != -1)
    {
        return dp[i][j];
    }
    int mini = 1e9;
    for (int k = i; k <= j - 1; k++)
    {
        int steps = arr[i - 1] * arr[k] * arr[j] + calcmincost(i, k, dp, arr) + calcmincost(k + 1, j, dp, arr);
        mini = min(mini, steps);
    }
    return dp[i][j] = mini;
}
int main()
{
    int n;
    cin >> n;
    vector<int> arr(n);
    for (int i = 0; i < n; i++)
    {
        cin >> arr[i];
    }
    vector<vector<int>> dp(n, vector<int>(n, -1));
    int mincost = calcmincost(1, n - 1, dp, arr);
    cout << mincost << endl;
}
